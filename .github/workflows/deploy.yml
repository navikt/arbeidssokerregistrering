name: Build, push, and deploy

on: push

env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE: docker.pkg.github.com/${{ github.repository }}/arbeidssokerregistrering

jobs:

  test-build-and-push:
    name: Test, build and push
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v1

      - name: Create pretty TAG
        run: echo "::set-env name=PRETTY_TAG::$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')-$(git rev-parse HEAD --short=7)"

      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE}:${PRETTY_TAG} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}:${PRETTY_TAG}

  deploy-q0:
    name: Deploy application to q0
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Deploy to Q0
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: naiserator-q0.yaml
          DRY_RUN: true

  deploy-q1:
    name: Deploy application to q1
    needs: test-build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Deploy to Q1
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: naiserator-fss.yaml
          VARS: nais/vars-q1-fss.yaml
          DRY_RUN: false

  deploy-prod:
    name: Deploy application to production
    needs: deploy-q0
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Deploy to production
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: naiserator-prod.yaml
          VAR: version=${{ env.IMAGE_TAG }}
          DRY_RUN: true

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release/prod@${{ env.IMAGE_TAG }}
          release_name: Release to prod
          prerelease: false